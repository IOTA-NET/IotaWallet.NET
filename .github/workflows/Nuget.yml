# This is a basic workflow to help you get started with Actions

name: Deploy to NuGet

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  release:
    types: [published]

env:
  APP_SOLUTION_PATH: ./csharp/IotaWalletNet/IotaWalletNet.Application/IotaWalletNet.Application.csproj
  NUGET_PATH: ${{ github.workspace }}\nugets
  NUGET_SRC_URL: 'https://api.nuget.org/v3/index.json'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3

      - name: Pack Nuget
        run: dotnet pack ${{ env.APP_SOLUTION_PATH }} -c Release /p:Version=${{ github.event.release.tag_name }} /p:PackageReleaseNotes="See https://github.com/wireless90/IotaWallet.NET/releases/tag/${{ github.event.release.tag_name }}" --include-symbols --output ${{ env.NUGET_PATH }}
        #run: dotnet pack ${{ env.APP_SOLUTION_PATH }} --no-restore --no-build --configuration Release --include-symbols --output ${{ env.NUGET_PATH }}
      - name: Create NuGet Package Artifact
        uses: actions/upload-artifact@v1
        with:
          name: IotaWallet.Net
          path: ./csharp/IotaWalletNet/IotaWalletNet.Application/bin/Release/IotaWalletNet.Application.${{ github.event.release.tag_name }}.nupkg
      - name: Push Nuget
        run:  dotnet nuget push ${{ env.NUGET_PATH }}\*.nupkg --api-key ${{ secrets.nuget_api_key }} --source ${{ env.NUGET_SRC_URL }}


